# Double check, all plots should sum to 1
check <- Robert%>%
group_by(Block,Plot)%>%
summarize(checker = sum(IV))
#BobSpruce Data Analysis
#Ashley Carter
#Forest Management Lab
# Edits by Premer, M.I. 20230907
#loadindata
BobSpruce <- read.csv('~/Desktop/BobSpruce.csv')
#install.packages("elevatr")
library(elevatr)
library(rgdal)
library(sf)
shape <- read_sf(dsn = "~/Google Drive/Shared Drives/4Picea/4Picea/gsp/", layer = "Spruce_plantation")
library(MEForLab)
library(devtools)
library(dplyr)
library(mosaic)
library(forcats)
library(tidyverse)
setwd("G:/Shared drives/4Picea/4Picea/raw")
picea <- read.csv("4Picea.csv")
picea$DBH.23 <- as.numeric(picea$DBH.23)
picea$DBH.23[is.na(picea$DBH.23)] <- 0
picea$uid <- paste0(picea$BLOCK,".",picea$PLOT)
picea$tree.factor <- 10
picea.summary <- picea%>%
filter(.,STATUS.23=="1")%>%
mutate(tree.ba = DBH.23^2*0.005454)%>%
group_by(uid)%>%
summarize(bapa = sum(tree.ba*tree.factor), # tree.factor is your expansion factor
tpa = sum(tree.factor))
plot(picea.summary$bapa,picea.summary$tpa) # most plots are between 20 and 140 bapa
picea.species <- picea%>%
filter(.,STATUS.23=="1")%>%
group_by(uid,SPP)%>%
summarize(sp.bapa = sum(DBH.23^2*.005454*tree.factor),
sp.tpa = sum(tree.factor))%>%
ungroup()%>%
left_join(.,picea.summary)%>%
mutate(prop.tpa = sp.tpa/tpa)%>%
mutate(prop.ba = sp.bapa/bapa)%>%
mutate(IV = (prop.tpa+prop.ba)/2)
####################### double check, all plots should sum to 1
check <- picea.species%>%
group_by(uid)%>%
summarize(checker = sum(IV))
print(check,n=30) # they sum to 1, good
###################### imputing tree heights
library(lme4)
# select for SITEid, PLOTid, and TREE to be in tree locations dataset
tree_species <- picea%>%
select(BLOCK, PLOT, TREE, SPP)
# filter for the living trees
picea <- filter(picea, STATUS.23 == 1)
# filter for heights above 0
height.frame <- filter(picea, HT.23 > 0)
# create model, Henrikson Equation (be wary of tree > 5" DBH)
ht.lm <- lmer(HT.23 ~ log(DBH.23) + (1 | SPP/PLOT/BLOCK), data = height.frame) #error means that model is likely overfitted
summary(ht.lm)
library(MEForLab)
library(devtools)
library(dplyr)
library(mosaic)
library(forcats)
library(tidyverse)
setwd("G:/Shared drives/4Picea/4Picea/raw")
picea <- read.csv("4Picea.csv")
picea$DBH.23 <- as.numeric(picea$DBH.23)
picea$DBH.23[is.na(picea$DBH.23)] <- 0
picea$uid <- paste0(picea$BLOCK,".",picea$PLOT)
picea$tree.factor <- 10
picea.summary <- picea%>%
filter(.,STATUS.23=="1")%>%
mutate(tree.ba = DBH.23^2*0.005454)%>%
group_by(uid)%>%
summarize(bapa = sum(tree.ba*tree.factor), # tree.factor is your expansion factor
tpa = sum(tree.factor))
plot(picea.summary$bapa,picea.summary$tpa) # most plots are between 20 and 140 bapa
picea.species <- picea%>%
filter(.,STATUS.23=="1")%>%
group_by(uid,SPP)%>%
summarize(sp.bapa = sum(DBH.23^2*.005454*tree.factor),
sp.tpa = sum(tree.factor))%>%
ungroup()%>%
left_join(.,picea.summary)%>%
mutate(prop.tpa = sp.tpa/tpa)%>%
mutate(prop.ba = sp.bapa/bapa)%>%
mutate(IV = (prop.tpa+prop.ba)/2)
####################### double check, all plots should sum to 1
check <- picea.species%>%
group_by(uid)%>%
summarize(checker = sum(IV))
print(check,n=30) # they sum to 1, good
###################### imputing tree heights
library(lme4)
# select for SITEid, PLOTid, and TREE to be in tree locations dataset
tree_species <- picea%>%
select(BLOCK, PLOT, TREE, SPP)
# filter for the living trees
picea <- filter(picea, STATUS.23 == 1)
# filter for heights above 0
height.frame <- filter(picea, HT.23 > 0)
# create model, Henrikson Equation (be wary of tree > 5" DBH)
ht.lm <- lmer(HT.23 ~ log(DBH.23) + (1 | SPP/PLOT/BLOCK), data = height.frame) #error means that model is likely overfitted
summary(ht.lm)
# predict heights
tree_predict <- picea %>%
mutate(PRD_HT = predict(ht.lm, picea, re.form = NULL, allow.new.levels = TRUE))
tree_predict$HT.23[is.na(tree_predict$HT.23)] <- 0
tree_predict$PRD_HT[is.na(tree_predict$PRD_HT)] <- 0
tree_predict$fin.ht <- ifelse(tree_predict$HT.23<1,tree_predict$PRD_HT,tree_predict$HT.23)
tree_predict$fin.ht <- ifelse(tree_predict$fin.ht<0,0,tree_predict$fin.ht)
tree_predict$SPP[is.na(tree_predict$SPP)] <- "OS"
## getting an error here, not sure why
tree_predict["vol"] <-
mapply(vol.calc,SPP=tree_predict$SPP,DBH=tree_predict$DBH.23,HT=tree_predict$fin.ht)
######################## basal area larger (bal)
spruce.bal <- picea%>%
mutate(basal.area = picea$DBH.23^2*0.005454)%>%
mutate(bapa = basal.area*10)%>%
group_by(uid)%>%
arrange(desc(DBH.23),.by_group = TRUE)%>%
mutate(bal = lag(cumsum(bapa)))
spruce.bal$bal[is.na(spruce.bal$bal)] <- 0
xyplot(bal~DBH.23|SPP,data=spruce.bal)
###################### height larger (htl)
spruce.htl <- tree_predict%>%
group_by(uid)%>%
arrange(desc(fin.ht),.by_group = TRUE)%>%
mutate(htl = lag(cumsum(fin.ht)))
spruce.htl$htl[is.na(spruce.htl$htl)] <- 0
xyplot(htl~fin.ht|SPP,data=spruce.htl)
###################### ht/diameter ratios
ht_dbh <- tree_predict %>%
mutate(ht_dbh = fin.ht/DBH.23)
##################### ANOVA: does diameter vary by pure vs mixed (one-way)
aov.3<- aov(DBH.23~CODE, data=picea)
summary(aov.3)
TukeyHSD(aov.3)
#Homogeneity of variances
plot(aov.3, 1)
#Normality
plot(aov.3, 2)
################# ANOVA: does diameter vary by mixed vs pure grouped by ID (two-way)
picea <- picea%>%
unite(ID,
BLOCK,
PLOT,
remove = FALSE,
sep = ".")
aov.4 <- aov(DBH.23~CODE+ID,data=picea)
summary(aov.4)
group_by(picea, CODE, ID) %>%
summarise(
count = n(),
mean = mean(DBH.23, na.rm = TRUE),
sd = sd(DBH.23, na.rm = TRUE)
)
# pairwise comparisons between groups
TukeyHSD(aov.4, which = "CODE")
TukeyHSD(aov.4, which = "ID")
#Homogeneity of variances
plot(aov.4, 1)
library(car) #if p-value is <.05 then var between groups is significantly different, don't want that
leveneTest(DBH.23 ~ CODE*ID, data = picea)
#Normality
plot(aov.4, 2)
############## Matt Russell ANOVA Textbook Exercises
p.diameter <- ggplot(picea, aes(factor(SPP), DBH.23)) +
geom_boxplot()+
ylab("Diameter (inches)") +
xlab("Species")
p.diameter
picea.aov <- lm(DBH.23 ~ SPP, data = picea)
# one way ANOVA diameter x species mix
p.diameter <- ggplot(picea, aes(factor(CODE), DBH.23)) +
geom_boxplot()+
ylab("Diameter (inches)") +
xlab("Species Mix")
p.diameter
piceamix.aov <- lm(DBH.23 ~ CODE, data = picea)
anova(piceamix.aov)
pairwise.t.test(picea$DBH.23, picea$CODE, p.adj = "bonferroni")
library(agricolae)
lsd.picea <- LSD.test(piceamix.aov, "CODE", p.adj = "bonferroni")
lsd.picea$groups
picea_summ2 <- picea %>%
group_by(CODE)  %>%
summarize(n.diameter = n(),
mean.diameter = mean(DBH.23),
sd.diameter = sd(DBH.23))
picea_summ2
# two way diameter x species + ID
ggplot(picea, aes(SPP, DBH.23, fill = ID)) +
geom_boxplot() +
ylab("Diameter (inches)") +
xlab("Species")
picea.aov2 <- lm(DBH.23 ~ SPP * ID, data = picea)
anova(picea.aov2)
pairwise.t.test(picea$DBH.23, picea$ID, p.adj = "bonferroni")
lsd.picea2 <- LSD.test(picea.aov2, "ID", p.adj = "bonferroni")
lsd.picea2$groups
picea_summ2 <- picea %>%
group_by(ID) %>%
summarize(n.diameter = n(),
mean.diameter = mean(DBH.23),
sd.diameter = sd(DBH.2023)) %>%
mutate(se.diameter = sd.diameter/sqrt(n.diameter))
picea_summ2
# generalized linear regression model for DBH + HT
ggplot(data=tree_predict, aes(x=DBH.23, y=fin.ht)) +
geom_point() +
geom_smooth(method = "lm")
#install.packages("elevatr")
library(elevatr)
library(rgdal)
library(sf)
shape <- read_sf(dsn = "~/Google Drive/Shared Drives/4Picea/4Picea/gsp/", layer = "Spruce_plantation")
setwd("G:/Shared drives/4Picea/4Picea/gsp")
picea <- read.csv("Spruce_plantation")
shape <- read_sf(dsn = "G:/Shared Drives/4Picea/4Picea/gsp/", layer = "Spruce_plantation")
plot(shape)
pie.ft <- get_elev_raster(shape,z=14,override_size_check = TRUE)
plot(pie.ft)
getwd()
writeRaster(picea,"~/Desktop/4PICEA_DEM.tif",overwrite=TRUE)
test <- raster("~/Desktop/4PICEA_DEM.tif")
plot(test)
writeRaster(picea,"~/Desktop/4PICEA_DEM.tif",overwrite=TRUE)
test <- raster("~/Desktop/4PICEA_DEM.tif")
plot(shape)
pie.ft <- get_elev_raster(shape,z=14,override_size_check = TRUE)
plot(pie.ft)
plot(shape,add=TRUE)
pie.ft
f <- drawExtent()
picea <- crop(pie.ft,f)
plot(picea)
plot(shape,add=TRUE)
getwd()
writeRaster(picea,"~/Desktop/4PICEA_DEM.tif",overwrite=TRUE)
#install.packages("elevatr")
library(elevatr)
library(rgdal)
library(sf)
writeRaster(picea,"~/Desktop/4PICEA_DEM.tif",overwrite=TRUE)
writeRaster(picea,"~/Desktop/4PICEA_DEM.tif",overwrite=TRUE)
test <- raster("~/Desktop/4PICEA_DEM.tif")
plot(test)
demSt <- terrain(test,opt=c("slope","aspect","TPI","TRI","roughness","flowdir"),unit='degrees',neighbors=8)
plot(demSt)
demSt
plot(demSt$slope)
plot(shape,add=TRUE)
library(topmodel)
bob <- create_layers(test)
plot(bob$twi)
plot(shape,add=TRUE)
picea.stack <- raster::stack(picea,demSt,bob)
plot(picea.stack)
terra::writeRaster(picea.stack,"~/Desktop/picea_stack.tif",options="INTERLEAVE=BAND",overwrite=TRUE)
plot(ft)
names(ft) <- c("elevation","tri","tpi","roughness","slope","aspect",
"flowdir","filled.elevations","upslope.area","twi")
plot(ft)
plot(ft$aspect)
plot(shape,add=TRUE,col="darkred",lwd=5)
#install.packages("elevatr")
library(elevatr)
library(rgdal)
library(sf)
shape <- read_sf(dsn = "G:/Shared Drives/4Picea/4Picea/gsp/", layer = "Spruce_plantation")
plot(shape)
pie.ft <- get_elev_raster(shape,z=14,override_size_check = TRUE)
plot(pie.ft)
pie.ft
f <- drawExtent()
picea <- crop(pie.ft,f)
